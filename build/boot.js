module.exports.main = [["assert",["vm-def"]],["assert",["vm-def","a"],"#ignore"],["assert",["vm-def","a",1],"#ignore"],["assert",["vm-def","a",1,2],"#ignore"],["assert",["vm-begin",["vm-def",["a"],1],"a"],1],["assert",["vm-begin",["vm-def",["a","b"],1,2],"b"],2],["assert",["vm-begin",["vm-def",["a",".","b"],1,2],"b"],[2]],["assert",["vm-begin",["vm-def",["a",".","b"],1,2,3],"b"],[2,3]],["assert",["vm-def",["a"]]],["assert",["vm-def",["a"],1],"#ignore"],["assert",["vm-def",["a","b"],1,2],"#ignore"],["assert",["vm-def",["a"],1,2]],["assert",["vm-def",["a",".","b"],1,2],"#ignore"],["assert",["vm-def",["a",".","b"],1,2,3],"#ignore"],["assert",["vm-def",["a",".","a"],1,2,3]],["assert",["vm-def",1,1]],["assert",["vm-def",["wat-string","a"],1]],["assert",["vm-begin"],null],["assert",["vm-begin",1],1],["assert",["vm-begin",1,2],2],["assert",["vm-if"]],["assert",["vm-if",true]],["assert",["vm-if",true,1],1],["assert",["vm-if",false,1]],["assert",["vm-if",true,1,2],1],["assert",["vm-if",false,1,2],2],["assert",["vm-if",false,1,2,3]],["assert",[["vm-vau"]]],["assert",[["vm-vau","a"]]],["assert",[["vm-vau","a","#ignore"]]],["assert",[["vm-vau","a","#ignore","a"]],[]],["assert",[["vm-vau","a","#ignore","a"],1],[1]],["assert",[["vm-vau","a","#ignore","a"],1,2],[1,2]],["assert",[["vm-vau","a","#ignore","b"]]],["assert",[["vm-vau",["a"],"#ignore","a"],1],1],["assert",[["vm-vau","a","#ignore",1,"a"],1]],["assert",[["vm-vau",1,"#ignore",1]]],["assert",[["vm-vau",["wat-string","a"],"#ignore",1]]],["assert",[["vm-vau","a","a",1]]],["assert",[["vm-vau",["a",".","a"],"e",1]]],["vm-def",["$define!"],"vm-def"],["$define!",["array->list"],"vm-array-to-list"],["$define!",["begin"],"vm-begin"],["$define!",["cons"],"vm-cons"],["$define!",["cons?"],"vm-cons?"],["$define!",["dnew"],"vm-dnew"],["$define!",["dref"],"vm-dref"],["$define!",["error"],"vm-error"],["$define!",["eval"],"vm-eval"],["$define!",["if"],"vm-if"],["$define!",["js-getter"],"vm-js-getter"],["$define!",["js-global"],"vm-js-global"],["$define!",["js-invoker"],"vm-js-invoker"],["$define!",["list*"],"vm-list*"],["$define!",["list->array"],"vm-list-to-array"],["$define!",["make-environment"],"vm-make-environment"],["$define!",["new"],"vm-js-new"],["$define!",["nil?"],"vm-nil?"],["$define!",["reverse-list"],"vm-reverse-list"],["$define!",["setter"],"vm-setter"],["$define!",["string->symbol"],"vm-string-to-symbol"],["$define!",["symbol-name"],"vm-symbol-name"],["$define!",["symbol?"],"vm-symbol?"],["$define!",["throw"],"vm-throw"],["$define!",["unwrap"],"vm-unwrap"],["$define!",["wrap"],"vm-wrap"],["$define!",["$vau"],"vm-vau"],["$define!",["quote"],["$vau",["x"],"#ignore","x"]],["$define!",["list"],["wrap",["$vau","elts","#ignore","elts"]]],["$define!",["the-environment"],["$vau",[],"e","e"]],["$define!",["get-current-environment"],["wrap",["$vau",[],"e","e"]]],["$define!",["log"],["wrap",["$vau",["msg"],"env",[["js-invoker",["wat-string","log"]],["js-global",["wat-string","console"]],"msg"]]]],["$define!",["make-macro-expander"],["wrap",["$vau",["expander"],"#ignore",["$vau","operands","env",["eval",["eval",["cons","expander","operands"],["make-environment"]],"env"]]]]],["$define!",["$vau"],["make-macro-expander",["$vau",["params","env-param",".","body"],"#ignore",["list","vm-vau","params","env-param",["list*","begin","body"]]]]],["assert",[["$vau","a","#ignore",1,2,3,4,5,"a"],6],[6]],["assert",[["$vau",["a"],"#ignore",1,2,3,4,5,"a"],6],6],["$define!",["macro"],["make-macro-expander",["$vau",["params",".","body"],"#ignore",["list","make-macro-expander",["list*","$vau","params","#ignore","body"]]]]],["$define!",["define-macro"],["macro",[["name",".","params"],".","body"],["list","$define!",["list","name"],["list*","macro","params","body"]]]],["define-macro",["$lambda","params",".","body"],["list","wrap",["list*","$vau","params","#ignore","body"]]],["assert",[["$lambda",["m"]],1],null],["assert",[["$lambda",["m"],"m"],1],1],["define-macro",["define-operative",["name",".","params"],"envparam",".","body"],["list","$define!",["list","name"],["list*","$vau","params","envparam","body"]]],["define-macro",["loop",".","body"],["list","vm-loop",["list*","begin","body"]]],["define-operative",["catch","protected","handler"],"env",["eval",["list","vm-catch","protected",["eval","handler","env"]],"env"]],["define-operative",["push-prompt","prompt",".","body"],"env",["eval",["list","vm-push-prompt",["eval","prompt","env"],["list*","begin","body"]],"env"]],["define-macro",["take-subcont","prompt","k",".","body"],["list","vm-take-subcont","prompt",["list*","$lambda",["list","k"],"body"]]],["define-macro",["push-subcont","k",".","body"],["list","vm-push-subcont","k",["list*","$lambda",[],"body"]]],["define-macro",["push-prompt-subcont","p","k",".","body"],["list","vm-push-prompt-subcont","p","k",["list*","$lambda",[],"body"]]],["$define!",["compose"],["$lambda",["f","g"],["$lambda",["arg"],["f",["g","arg"]]]]],["$define!",["car"],["$lambda",[["x",".","#ignore"]],"x"]],["$define!",["cdr"],["$lambda",[["#ignore",".","x"]],"x"]],["$define!",["caar"],["compose","car","car"]],["$define!",["cadr"],["compose","car","cdr"]],["$define!",["cdar"],["compose","cdr","car"]],["$define!",["cddr"],["compose","cdr","cdr"]],["$define!",["map-list"],["$lambda",["f","lst"],["if",["nil?","lst"],[],["cons",["f",["car","lst"]],["map-list","f",["cdr","lst"]]]]]],["assert",["map-list","car",["quote",[["a",1],["b",2]]]],["a","b"]],["assert",["map-list","cadr",["quote",[["a",1],["b",2]]]],[1,2]],["assert",[["$vau","l","e",["list*",["quote","$define"],["map-list","car","l"],["map-list","cadr","l"]]],["a",1],["b",2]],["$define",["a","b"],1,2]],["$define!",["list-for-each"],["$lambda",["f","lst"],["if",["nil?","lst"],[],["begin",["f",["car","lst"]],["list-for-each","f",["cdr","lst"]]]]]],["$define!",["list-keep"],["$lambda",["p","lst"],["if",["nil?","lst"],[],["if",["p",["car","lst"]],["cons",["car","lst"],["list-keep","p",["cdr","lst"]]],["list-keep","p",["cdr","lst"]]]]]],["$define!",["fold-list"],["$lambda",["f","init","lst"],["if",["nil?","lst"],"init",["fold-list","f",["f","init",["car","lst"]],["cdr","lst"]]]]],["define-macro",["let","bindings",".","body"],["if",["symbol?","bindings"],["list*","let-loop","bindings","body"],["list*",["list*","$lambda",["map-list","car","bindings"],"body"],["map-list","cadr","bindings"]]]],["define-macro",["let-loop","name","bindings",".","body"],["list","letrec",["list",["list","name",["list*","$lambda",["map-list","car","bindings"],"body"]]],["list*","name",["map-list","cadr","bindings"]]]],["define-macro",["let*","bindings",".","body"],["if",["nil?","bindings"],["list*","let",[],"body"],["list","let",["list",["car","bindings"]],["list*","let*",["cdr","bindings"],"body"]]]],["assert",["let*",[],1],1],["assert",["let*",[["a",1],["b","a"]],"b"],1],["define-macro",["letrec","bindings",".","body"],["list*","let",[],["list*","$define!",["map-list","car","bindings"],["map-list","cadr","bindings"]],"body"]],["assert",["letrec",[["a",1]],"a"],1],["assert",["letrec",[["a",["$lambda",[],1]]],["a"]],1],["define-macro",["let-loop","name","bindings",".","body"],["list","letrec",["list",["list","name",["list*","$lambda",["map-list","car","bindings"],"body"]]],["list*","name",["map-list","cadr","bindings"]]]],["assert",["let-loop","l",[["a",1]],"a"],1],["define-macro",["lambda","params",".","body"],["letrec",[["typed-params->names-and-checks",["$lambda",["ps"],["if",["cons?","ps"],["let*",[[["p",".","rest-ps"],"ps"],[["names",".","checks"],["typed-params->names-and-checks","rest-ps"]]],["if",["cons?","p"],["let*",[[["name","type"],"p"],["check",["list","the","type","name"]]],["cons",["cons","name","names"],["cons","check","checks"]]],["cons",["cons","p","names"],"checks"]]],["cons","ps",[]]]]]],["let",[[["untyped-names",".","type-checks"],["typed-params->names-and-checks","params"]]],["list*","$lambda","untyped-names",["list*","begin","type-checks"],"body"]]]],["define-macro",["define","lhs",".","rhs"],["if",["cons?","lhs"],["list","$define!",["list",["car","lhs"]],["list*","lambda",["cdr","lhs"],"rhs"]],["list","$define!",["list","lhs"],["car","rhs"]]]],["define",["apply","appv","arg",".","opt"],["if",["instanceof","appv",["js-global",["wat-string","Function"]]],[["js-invoker",["wat-string","apply"]],"appv",null,["list->array","arg"]],["eval",["cons",["unwrap","appv"],"arg"],["if",["nil?","opt"],["make-environment"],["car","opt"]]]]],["define-operative",["cond",".","clauses"],"env",["if",["nil?","clauses"],null,["let",[[[["test",".","body"],".","clauses"],"clauses"]],["if",["eval","test","env"],["apply",["wrap","begin"],"body","env"],["apply",["wrap","cond"],"clauses","env"]]]]],["define","else",true],["define-operative",["and",".","x"],"e",["cond",[["nil?","x"],true],[["nil?",["cdr","x"]],["eval",["car","x"],"e"]],[["eval",["car","x"],"e"],["apply",["wrap","and"],["cdr","x"],"e"]],["else",false]]],["define-operative",["or",".","x"],"e",["cond",[["nil?","x"],false],[["nil?",["cdr","x"]],["eval",["car","x"],"e"]],[["eval",["car","x"],"e"],true],["else",["apply",["wrap","or"],["cdr","x"],"e"]]]],["define",["call-with-escape","fun"],["let",[["fresh",["list",null]]],["catch",["fun",["$lambda","opt-arg",["throw",["list","fresh","opt-arg"]]]],["$lambda",["exc"],["if",["and",["cons?","exc"],["===","fresh",["car","exc"]]],["let",[["opt-arg",["cadr","exc"]]],["if",["cons?","opt-arg"],["car","opt-arg"],null]],["throw","exc"]]]]]],["define-macro",["label","name",".","body"],["list","call-with-escape",["list*","$lambda",["list","name"],"body"]]],["define-operative",["while","test",".","body"],"env",["let",[["body",["list*","begin","body"]]],["label","return",["loop",["if",["eval","test","env"],["eval","body","env"],["return"]]]]]],["define-macro",["when","test",".","body"],["list","if","test",["list*","begin","body"],null]],["define-macro",["unless","test",".","body"],["list*","when",["list","not","test"],"body"]],["define-macro",["set",["getter",".","args"],"new-val"],["list*",["list","setter","getter"],"new-val","args"]],["define-operative",["dlet","bindings",".","body"],"env",["eval",["let","process-bindings",[["bs","bindings"]],["if",["nil?","bs"],["list*","begin","body"],["let*",[[[["name","expr"],".","rest-bs"],"bs"],["value",["eval","expr","env"]]],["list","vm-dlet","name","value",["process-bindings","rest-bs"]]]]],"env"]],["define-operative",["define-prototype","name","super-name","prop-names"],"env",["eval",["list","$define!",["list","name"],["make-prototype","name","super-name","prop-names","env"]],"env"]],["define",["make-prototype","name","super-name","prop-names","env"],["let",[["p",["apply","vm-js-make-prototype",["list*",["symbol-name","name"],["map-list","symbol-name","prop-names"]]]],["super",["eval","super-name","env"]]],["set",[["js-getter",["wat-string","prototype"]],"p"],[["js-invoker",["wat-string","create"]],["js-global",["wat-string","Object"]],[["js-getter",["wat-string","prototype"]],"super"]]],["set",[["js-getter",["wat-string","constructor"]],[["js-getter",["wat-string","prototype"]],"p"]],"super"],"p"]],["define-macro",["define-generic",["name",".","#ignore"]],["list","$define!",["list","name"],["lambda","args",["apply",[["js-getter","name"],["car","args"]],"args"]]]],["define-macro",["define-method",["name",["self","ctor"],".","args"],".","body"],["list","put-method","ctor",["symbol-name","name"],["list*","lambda",["list*","self","args"],"body"]]],["define",["put-method","ctor","name","fun"],["set",[["js-getter","name"],[["js-getter",["wat-string","prototype"]],"ctor"]],"fun"]],["define-operative",["provide","symbols",".","body"],"env",["eval",["list","$define!","symbols",["list","let",[],["list*","begin","body"],["list*","list","symbols"]]],"env"]],["define-operative",["module","exports",".","body"],"env",["let",[["menv",["make-environment","env"]]],["eval",["list*","provide","exports","body"],"menv"],["make-environment","menv"]]],["define-macro",["define-module","name","exports",".","body"],["list","$define!",["list","name"],["list*","module","exports","body"]]],["define-operative",["import","module","imports"],"env",["let*",[["m",["eval","module","env"]],["values",["map-list",["$lambda",["import"],["eval","import","m"]],"imports"]]],["eval",["list","$define!","imports",["list*","list","values"]],"env"]]],["define",["relational-op","name"],["let",[["binop",["vm-js-binop","name"]]],["letrec",[["op",["lambda",["arg1","arg2",".","rest"],["if",["binop","arg1","arg2"],["if",["nil?","rest"],true,["apply","op",["list*","arg2","rest"]]],false]]]],"op"]]],["define","==",["relational-op",["wat-string","=="]]],["define","===",["relational-op",["wat-string","==="]]],["define","<",["relational-op",["wat-string","<"]]],["define",">",["relational-op",["wat-string",">"]]],["define","<=",["relational-op",["wat-string","<="]]],["define",">=",["relational-op",["wat-string",">="]]],["define",["!=",".","args"],["not",["apply","==","args"]]],["define",["!==",".","args"],["not",["apply","===","args"]]],["define","*",["let",[["vm*",["vm-js-binop",["wat-string","*"]]]],["lambda","args",["fold-list","vm*",1,"args"]]]],["define","+",["let",[["vm+",["vm-js-binop",["wat-string","+"]]]],["lambda","args",["if",["nil?","args"],0,["fold-list","vm+",["car","args"],["cdr","args"]]]]]],["define",["negative-op","binop","unit"],["lambda",["arg1",".","rest"],["if",["nil?","rest"],["binop","unit","arg1"],["fold-list","binop","arg1","rest"]]]],["define","-",["negative-op",["vm-js-binop",["wat-string","-"]],0]],["define","/",["negative-op",["vm-js-binop",["wat-string","/"]],1]],["define","%",["vm-js-binop",["wat-string","%"]]],["define","not",["vm-js-unop",["wat-string","!"]]],["define","typeof",["vm-js-unop",["wat-string","typeof"]]],["define","in",["vm-js-binop",["wat-string","in"]]],["define","instanceof",["vm-js-binop",["wat-string","instanceof"]]],["define","bitand",["vm-js-binop",["wat-string","&"]]],["define","bitor",["vm-js-binop",["wat-string","|"]]],["define","bitxor",["vm-js-binop",["wat-string","^"]]],["define","bitnot",["vm-js-unop",["wat-string","~"]]],["define","bitshiftl",["vm-js-binop",["wat-string","<<"]]],["define","bitshiftr",["vm-js-binop",["wat-string",">>"]]],["define","bitshiftr0",["vm-js-binop",["wat-string",">>>"]]],["define-operative",["object",".","pairs"],"env",["let",[["obj",["vm-js-make-object"]]],["map-list",["$lambda",[["name","value"]],["set",[["js-getter",["eval","name","env"]],"obj"],["eval","value","env"]]],"pairs"],"obj"]],["define",["elt","object","key"],[["js-getter","key"],"object"]],["set",["setter","elt"],["lambda",["new-val","object","key"],["set",[["js-getter","key"],"object"],"new-val"]]],["define",["array",".","args"],["list->array","args"]],["define",["js-callback","fun"],["vm-js-function",["$lambda","args",["push-prompt","vm-root-prompt",["apply","fun","args"]]]]],["define-macro",["js-lambda","params",".","body"],["list","js-callback",["list*","lambda","params","body"]]],["define-macro",["type?","obj","type"],["list","vm-type?","obj","type",["symbol-name","type"]]],["define-macro",["the","type","obj"],["list","if",["list","type?","obj","type"],"obj",["list","error",["list","+","obj",["wat-string"," is not a: "],"type"]]]],["define","Array",["js-global",["wat-string","Array"]]],["define","Boolean",["js-global",["wat-string","Boolean"]]],["define","Date",["js-global",["wat-string","Date"]]],["define","Function",["js-global",["wat-string","Function"]]],["define","Number",["js-global",["wat-string","Number"]]],["define","Object",["js-global",["wat-string","Object"]]],["define","RegExp",["js-global",["wat-string","RegExp"]]],["define","String",["js-global",["wat-string","String"]]],["define",["log","x",".","xs"],["apply",["js-invoker",["wat-string","log"]],["list*",["js-global",["wat-string","console"]],"x","xs"]],"x"],["define-prototype","Cell","Object",["value"]],["define",["cell","value"],["new","Cell","value"]],["define",["ref",["c","Cell"]],[["js-getter",["wat-string","value"]],"c"]],["set",["setter","ref"],["lambda",["new-val",["c","Cell"]],["set",[["js-getter",["wat-string","value"]],"c"],"new-val"]]],["define-macro",["++","place"],["list","set","place",["list","+","place",1]]],["define-macro",["--","place"],["list","set","place",["list","-","place",1]]],["define",["map-array","fun",["arr","Array"]],["list->array",["map-list","fun",["array->list","arr"]]]],["define",["array-keep","pred",["arr","Array"]],["list->array",["list-keep","pred",["array->list","arr"]]]],["define-operative",["time","expr"],"env",["let",[["n",[["js-invoker",["wat-string","getTime"]],["new","Date"]]],["result",["eval","expr","env"]]],["log",["+",["wat-string","time "],"expr",["wat-string",": "],["-",[["js-invoker",["wat-string","getTime"]],["new","Date"]],"n"],["wat-string","ms"]]],"result"]],["define-operative",["assert-true","expr"],"env",["unless",["===",true,["eval","expr","env"]],["error",["+",["wat-string","Should be true: "],"expr"]]]],["define-operative",["assert-false","expr"],"env",["unless",["===",false,["eval","expr","env"]],["error",["+",["wat-string","Should be false: "],"expr"]]]],["define-operative",["assert-===","expected","expr2"],"env",["let",[["res",["eval","expr2","env"]],["exp",["eval","expected","env"]]],["unless",["===","exp","res"],["error",["+","expr2",["wat-string"," should be "],"exp",["wat-string"," but is "],"res"]]]]],["define-operative",["assert-==","expected","expr2"],"env",["let",[["res",["eval","expr2","env"]],["exp",["eval","expected","env"]]],["unless",["==","exp","res"],["error",["+","expr2",["wat-string"," should be "],"exp",["wat-string"," but is "],"res"]]]]],["define-operative",["assert-throws","expr"],"env",["label","return",["catch",["eval","expr","env"],["lambda",["exc"],["return"]]],["error",["+",["wat-string","Should throw: "],"expr"]]]],["define-prototype","Option","Object",[]],["define-prototype","Some","Option",["value"]],["define-prototype","None","Option",[]],["define",["some","value"],["new","Some","value"]],["define","none",["new","None"]],["define-operative",["if-option",["option-name","option-expr"],"then","else"],"env",["let",[["option",["the","Option",["eval","option-expr","env"]]]],["if",["type?","option","Some"],["eval",["list",["list","lambda",["list","option-name"],"then"],[["js-getter",["wat-string","value"]],"option"]],"env"],["eval","else","env"]]]],["define",["print-stacktrace","err"],["define",["print-frame","k"],["log",[["js-invoker",["wat-string","toString"]],[["js-getter",["wat-string","fun"]],"k"]],[["js-getter",["wat-string","dbg"]],"k"],[["js-getter",["wat-string","e"]],"k"]],["when",["type?",[["js-getter",["wat-string","next"]],"k"],["js-global",["wat-string","StackFrame"]]],["print-frame",[["js-getter",["wat-string","next"]],"k"]]]],["take-subcont","vm-root-prompt","k",["log","err"],["log","k"],["push-prompt","vm-root-prompt",["push-subcont","k"]]]],["define",["user-break","err"],["throw","err"]]]
